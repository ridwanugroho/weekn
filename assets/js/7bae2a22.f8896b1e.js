"use strict";(self.webpackChunkweekn=self.webpackChunkweekn||[]).push([[413],{9292:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"homeProjectSidebar":[{"type":"link","label":"Home Project","href":"/weekn/docs/home-projects/","docId":"home-projects/index","unlisted":false}],"onJobProjectSidebar":[{"type":"category","label":"Auth","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Single Sing On (SSO) Using Keycloak","href":"/weekn/docs/on-job-projects/Auth/sso-keycloak-overview","docId":"on-job-projects/Auth/sso-keycloak-overview","unlisted":false},{"type":"link","label":"Storing Web API client auth token in Redis","href":"/weekn/docs/on-job-projects/Auth/web-api-token-redis","docId":"on-job-projects/Auth/web-api-token-redis","unlisted":false}]},{"type":"category","label":"dealership-system","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/weekn/docs/on-job-projects/dealership-system/overview","docId":"on-job-projects/dealership-system/overview","unlisted":false},{"type":"link","label":"Web Ui App","href":"/weekn/docs/on-job-projects/dealership-system/web-ui-app","docId":"on-job-projects/dealership-system/web-ui-app","unlisted":false},{"type":"link","label":"ERP Integration","href":"/weekn/docs/on-job-projects/dealership-system/erp-integration","docId":"on-job-projects/dealership-system/erp-integration","unlisted":false}]}]},"docs":{"home-projects/index":{"id":"home-projects/index","title":"Home Project","description":"This is the landing page for the Home Project section.","sidebar":"homeProjectSidebar"},"on-job-projects/Auth/sso-keycloak-overview":{"id":"on-job-projects/Auth/sso-keycloak-overview","title":"Single Sing On (SSO) Using Keycloak","description":"SSO is a common feature of web application. In New DNet we utilize identity provider platform called Keycloak to perform SSO. Keycloak has many ability to handle various authentication and authorization scenario but we only utilize it as identity provider. The main idea is New DNet has very custom user authorization and role management rule and it will more challenging if we rely on keycloak. Also, we are minimizing of being dependent to 3rd party platform.","sidebar":"onJobProjectSidebar"},"on-job-projects/Auth/web-api-token-redis":{"id":"on-job-projects/Auth/web-api-token-redis","title":"Storing Web API client auth token in Redis","description":"alt text","sidebar":"onJobProjectSidebar"},"on-job-projects/dealership-system/erp-integration":{"id":"on-job-projects/dealership-system/erp-integration","title":"ERP Integration","description":"tes","sidebar":"onJobProjectSidebar"},"on-job-projects/dealership-system/overview":{"id":"on-job-projects/dealership-system/overview","title":"Overview","description":"Dealer network is web-based application is used to maintain transaction between one of car manufacture (in indonesia) and dealer (as direct seller to customer). This application built years ago, but the features is increasing and enhanced in era. Although the main application is web-based, there are several extension app that support the main UI app fulfil  the business need. in this article, i will explain what are the applications and services, how we (especially me) build and integrate, and also the pros and cons.","sidebar":"onJobProjectSidebar"},"on-job-projects/dealership-system/web-ui-app":{"id":"on-job-projects/dealership-system/web-ui-app","title":"Web Ui App","description":"1746970665550","sidebar":"onJobProjectSidebar"}}}}')}}]);